= Introduction =

The following page describe the process used to import the data from the GROMS DB into SDR. This procedure will need to be automated through the use of scripts, so this will be the basis for something like this.


1. Generate a list of nub_concept_ids fro which GROMS has distribution data. This will be used to import into the distribution table:

In GROMS DB
{{{
create table temp as select gbif_id as temp_gbif_name_id from species_names as sn inner join accessexport as a on sn.species_id=a.species_id where gbif_id is not null;

COPY temp TO '/tmp/groms_nub_concepts_ids.txt';

drop table temp;
}}}

2. Export the geometries table with related metadata into a dump, creating first a temp table.

{{{
create table temp_dist_units as select gbif_id as temp_gbif_name_id, ("start" *30) as start_day_in_year, ("end"*30) as end_day_in_year, 6 as nativeness_fk,1 as occurrence_status_fk, null as life_stage_fk, the_geom as interpreted_geom from shapefiles as s inner join species_names as sn on s.species_id=sn.species_id;

pg_dump -hlocalhost -Upostgres -ttemp_dist_units groms > temp_dist_units.sql

drop table temp_dist_units;
}}}

3. Now we have to import into SDR

{{{
psql -hlocalhost -dsdr -Upostgres < temp_dist_units.sql

CREATE TABLE temp_groms_gbif_names_ids
(
   nub_concept_id integer
) WITH (OIDS=FALSE)
;
COPY temp_groms_gbif_names_ids FROM '/tmp/groms_nub_concepts_ids.txt';

}}}

4. Create the distribution records from the names by linking to the scientific_name table.
{{{

select id as name_fk, 2 as resource_fk,null as year_start,null as year_end, null as created_when, 1 as spatial_resolution_fk, null as spatial_scope_named_area_fk, 2 as record_base_fk,
null as spatial_accuracy, null as confidence_by_source, 2 as distribution_type_fk, true as is_public
 from temp_groms_gbif_names_ids as t inner join scientific_name as s on t.nub_concept_id=s.gbif_name_id limit 1

}}}
