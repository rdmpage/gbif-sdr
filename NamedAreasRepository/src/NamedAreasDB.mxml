<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo" 
	xmlns:local="*" minWidth="800" minHeight="600" xmlns:maps="com.google.maps.*">
	<s:states>
		<s:State name="State1"/>
		<s:State name="AreaSelected"/>
	</s:states>
	
	<fx:Style source="NamedAreasDB.css"/>
	
<fx:Declarations>
	<mx:RemoteObject id="server" endpoint="http://ec2-174-129-85-138.compute-1.amazonaws.com/amfphp/gateway.php" source="NARServices" 
		destination="NARServices">
		<mx:method name="getReferences"/>
		<mx:method name="getReferenceCodes"/>
	</mx:RemoteObject>
</fx:Declarations>

<fx:Script>
	<![CDATA[
		import spark.effects.animation.Animation;
		import com.google.maps.overlays.TileLayerOverlay;
		import com.vizzuality.map.CustomWMSTileLayer;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.remoting.mxml.RemoteObject;
		import com.adobe.utils.StringUtil;
		import flash.net.navigateToURL;
		import com.google.maps.MapMouseEvent;
		import com.google.maps.styles.StrokeStyle;
		import com.google.maps.InfoWindowOptions;
		import mx.effects.Tween;
		import com.google.maps.controls.ControlPosition;
		import com.google.maps.controls.ZoomControlOptions;
		import mx.events.ResizeEvent;
		import mx.events.FlexEvent;
		import com.google.maps.overlays.MarkerOptions;
		import com.google.maps.controls.MapTypeControl;
		import com.google.maps.controls.ZoomControl;
		import com.google.maps.LatLngBounds;
		import com.google.maps.overlays.Marker;
		import mx.controls.Text;
		import mx.collections.ArrayCollection;
		import com.adobe.serialization.json.JSON;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.http.mxml.HTTPService;
		import com.google.maps.MapType;
		import com.google.maps.LatLng;
		
		[Bindable]public var namedAreasCollection:ArrayCollection = new ArrayCollection();
		[Bindable]public var namedAreasList:ArrayCollection = new ArrayCollection();
		
		[Bindable]private var descriptionText: String = "";
		[Bindable]private var areaText: String= "";
		
		public var bbox:LatLngBounds;
		private var i:int;
		public var picturesInfoWindows:Dictionary = new Dictionary(true);
		public var picturesIdInfoWindows:Dictionary = new Dictionary(true);
		
		
		private function init():void {
			
	       var externalDomains:Array=[
	              "ec2-174-129-85-138.compute-1.amazonaws.com:8080"];
	        for each(var dom:String in externalDomains) {
	            Security.allowDomain(dom);
	            Security.loadPolicyFile("http://"+dom+"/crossdomain.xml");
	            var request:URLRequest = new URLRequest("http://"+dom+"/crossdomain.xml");
	            var loader:URLLoader = new URLLoader();
	            loader.addEventListener(IOErrorEvent.IO_ERROR,function(event:IOErrorEvent):void {
	                trace("error");
	            });
	        loader.load(request);                               
                                }                               
			
			map.addControl(new ZoomControl());
			map.addControl(new MapTypeControl());
			map.setCenter(new LatLng(30,0),2,MapType.PHYSICAL_MAP_TYPE);
			
			
			server.addEventListener(ResultEvent.RESULT,onGetNamedAreas);
			server.addEventListener(FaultEvent.FAULT,function faultTrace(ev:FaultEvent):void { trace(ev)});
			server.getReferences();
		}

		
		private function addOnMap(point: LatLng):void {
		}
		
		private function onGetNamedAreas(ev:ResultEvent):void {
			server.removeEventListener(ResultEvent.RESULT,onGetNamedAreas);
			namedAreasCollection.source = ev.result as Array;
			
		}
		
		
		
		private function updateListProviders():void {			
			
			this.currentState = "AreaSelected";
			
			descriptionText = namedAreasCollection[combo.selectedIndex].description;
			areaText = namedAreasCollection[combo.selectedIndex].title;
			
			descriptionBox.alpha = 1;
			loading.visible=true;
			namedAreasList.source = null;
			server.addEventListener(ResultEvent.RESULT, onGetCountries);
			server.addEventListener(FaultEvent.FAULT,function faultTrace(ev:FaultEvent):void { trace(ev)});
			server.getReferenceCodes(combo.selectedIndex + 1);
			
			//Add Reference to the map
            map.clearOverlays();
			var cWmsTile:CustomWMSTileLayer = new CustomWMSTileLayer(combo.selectedItem.code);
			var tlo:TileLayerOverlay = new TileLayerOverlay(cWmsTile);
			map.addOverlay(tlo);
			
			//End
			
			
		}
		
		private function onGetCountries(event: ResultEvent):void {
			loading.visible = false;
			namedAreasList.source = event.result as Array;
		}

	]]>
</fx:Script>	
    
    <fx:Declarations>
        <mx:Fade id="fadeOut" duration="1000" alphaFrom="1.0" alphaTo="0.0"/>
        <mx:Pause duration="1000" />
        <mx:Fade id="fadeIn" duration="1000" alphaFrom="0.0" alphaTo="1.0"/>
    </fx:Declarations>
    
    

	
	<s:Rect width="100%" height="100%">
		<s:fill>
        	<s:LinearGradient rotation="90">
            	<s:GradientEntry color="#FFFFFF" />
            	<s:GradientEntry color="#FFFFF9" />
        	</s:LinearGradient>
    	</s:fill>
	</s:Rect>
	
	<mx:Image source="@Embed('com/vizzuality/assets/gbif.jpg')" right="0" left="0"/>
	
	<maps:Map id="map" key="lala" mapevent_mapready="init()" 
		top="120" left="0" bottom="0" right="250" top.AreaSelected="120" left.AreaSelected="0" bottom.AreaSelected="75" right.AreaSelected="250"/>
	<mx:Image source="@Embed('com/vizzuality/assets/logoMapVizz.png')" left="70" bottom="5" left.AreaSelected="70" bottom.AreaSelected="80"/>
	<s:Group fontFamily="Verdana" fontSize="11" contentBackgroundColor="#393939" baseColor="#393939" 
		focusColor="#393939" selectionColor="#393939" symbolColor="#393939" rollOverColor="#393939" top="120" bottom="0" right="0" width="250">
		<s:HGroup width="100%"  height="32" verticalAlign="middle">
			<mx:Label text="References" textAlign="right" height="100%" fontFamily="Verdana" color="#558B29" fontSize="20" fontWeight="bold" letterSpacing="-2" width="100%" paddingTop="4"/>
			<mx:SWFLoader id="loading" source="@Embed('com/vizzuality/assets/tinyLoading.swf')" width="67" height="15" visible="false"/>
		</s:HGroup>
		
		<s:DropDownList id="combo" dataProvider="{namedAreasCollection}" labelField="title"  selectionChanged="updateListProviders()" styleName="ComboBoxNamedAreas"  
			left="5" right="5" baseColor="0xFFFFFF" height="20" color="#6B6B6B" fontFamily="Arial" contentBackgroundColor="0xFFFFFF" selectionColor="#DFDFDF" focusColor="#FFFFFF" 
			rollOverColor="#DFDFDF" symbolColor="#868686" top="42" prompt="Choose your area!"/>
		
		<s:List id="repeaterTweets" itemRenderer="AreasItem" width="100%" skinClass="com.vizzuality.style.skin.CustomListSkin" baseColor="0xFFFFFF"
			 contentBackgroundColor="#FFFFFF" dataProvider="{namedAreasList}" top="75" bottom="0" >
			<s:layout>
				<s:VerticalLayout id="verticalLayout" gap="0"/>				
			</s:layout>
		</s:List>
	</s:Group>
	
	<mx:Box id="descriptionBox" bottom="0" right="250" left="0" height="75" backgroundColor="#898989" color="#FFFFFF" paddingLeft="10" paddingRight="10" paddingTop="5" 
		paddingBottom="5" verticalGap="0" verticalScrollPolicy="off" borderColor="#898989" alpha="0.0" alpha.AreaSelected="1">
		<s:Group width.AreaSelected="100%" height.AreaSelected="100%">
			<mx:Label text="{areaText}"  fontSize.AreaSelected="17" fontWeight.AreaSelected="bold" left.AreaSelected="0" right.AreaSelected="75"/>
			<s:Button right="10" top="10" label.AreaSelected="CSV" color.AreaSelected="#393939" textAlign.AreaSelected="center" top.AreaSelected="20" right.AreaSelected="0"/>
			<mx:Label text="{descriptionText}"  height.AreaSelected="42" bottom.AreaSelected="0" right.AreaSelected="83" left.AreaSelected="0" y.AreaSelected="17"/>			
			<mx:Label text="Download"  includeIn="AreaSelected" right="3"/>
		</s:Group>
	</mx:Box>
</s:Application>
