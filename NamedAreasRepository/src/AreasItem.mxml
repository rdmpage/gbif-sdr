<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer 
  xmlns:fx="http://ns.adobe.com/mxml/2009" 
  xmlns:s="library://ns.adobe.com/flex/spark" 
  xmlns:mx="library://ns.adobe.com/flex/halo" width="100%" height="50"
   click="itemrenderer1_clickHandler(event)" >


	<fx:Script>
		<![CDATA[
			import com.google.maps.MapMouseEvent;
			import com.google.maps.LatLngBounds;
			import mx.core.mx_internal;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.core.FlexGlobals;
			import com.google.maps.LatLng;
			import com.google.maps.InfoWindowOptions;
			import com.google.maps.overlays.Marker;
			import mx.core.Application;
			
			private function itemrenderer1_clickHandler(event:MouseEvent):void {
				FlexGlobals.topLevelApplication.map.clearOverlays();
				FlexGlobals.topLevelApplication.server.addEventListener(ResultEvent.RESULT,onGetNamedAreas);
				FlexGlobals.topLevelApplication.server.addEventListener(FaultEvent.FAULT,function faultTrace(ev:FaultEvent):void { trace(ev)});
				FlexGlobals.topLevelApplication.server.getNamedAreaDetails(FlexGlobals.topLevelApplication.codeAreaSelected,data.area_code);
				trace(FlexGlobals.topLevelApplication.codeAreaSelected);
				
				FlexGlobals.topLevelApplication.countriesList.enabled = false;
				FlexGlobals.topLevelApplication.mamufas.visible = true;
 			}
 			
	 		private function onGetNamedAreas(ev:ResultEvent):void {
				FlexGlobals.topLevelApplication.server.removeEventListener(ResultEvent.RESULT,onGetNamedAreas);
				
				var bounds:LatLngBounds = new LatLngBounds(
				new LatLng(ev.result.south, ev.result.west),
				new LatLng(ev.result.north, ev.result.east)
				);
				
				FlexGlobals.topLevelApplication.map.setCenter(bounds.getCenter(),FlexGlobals.topLevelApplication.map.getBoundsZoomLevel(bounds));
				
				var latlong: LatLng = new LatLng(ev.result.center_lon,ev.result.center_lat);
			    var marker:Marker = new Marker(latlong);
			    
			    var infoWindow:InfoWindowOptions = new InfoWindowOptions();
				infoWindow.title = "example";
				/* infoWindow.customContent = imageLoader; */
				infoWindow.drawDefaultFrame = true;
				infoWindow.padding = 10;
				infoWindow.width = 100;
				infoWindow.height = 50;
				/* infoWindow.width = (imageLoader.width + 10);
				infoWindow.height = (imageLoader.height + 10); */

				FlexGlobals.topLevelApplication.map.openInfoWindow(latlong,infoWindow);


				FlexGlobals.topLevelApplication.mamufas.visible = false;
				FlexGlobals.topLevelApplication.countriesList.enabled = true;
				FlexGlobals.topLevelApplication.countriesList.visible = true;
			}

		]]>
	</fx:Script>
	


  
  <s:states>
    <s:State name="normal"/>
    <s:State name="hovered"/>
    <s:State name="selected"/>
  </s:states>
  
     <s:Rect height="100%" width="100%">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="#ffffff" />
                <s:GradientEntry color="#e9e9e9" />
            </s:LinearGradient>
        </s:fill>
        <s:fill.hovered>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="#78c96c" />
                <s:GradientEntry color="#5eb236" />
            </s:LinearGradient>
        </s:fill.hovered>
        <s:fill.selected>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="#78c96c" />
                <s:GradientEntry color="#5eb236" />
            </s:LinearGradient>
        </s:fill.selected>
    </s:Rect>
    
  <s:VGroup y="10" height="25" x="10" left="10" right="5" gap="-1">
	<s:SimpleText text="{'[' + data.area_code.toString() + '] ' + data.area_name.toString()}" verticalAlign="middle" color.selected="0xFFFFFF"
		color.hovered="#FFFFFF" fontSize="12" fontFamily="Helvetica" fontWeight="bold" height="30" width="100%" color.normal="#5DB135"/>
  </s:VGroup>

</s:ItemRenderer>
